/*
 *   Copyright 2016 Manik Surtani
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 */

syntax = "proto3";

package quotaservice;

service QuotaService {
  rpc Allow (AllowRequest) returns (AllowResponse) {
  }
}

message AllowRequest {
  string namespace = 1;
  string bucket_name = 2;
  /**
   * Number of tokens requested. Defaults to 1, cannot be 0.
   */
  int64 tokens_requested = 3;
  /**
   * Max wait time, in millis. Defaults to 0, which assumes no waiting.
   */
  int64 max_wait_millis_override = 4;
  /**
   * Whether to override max wait time with the above value.
   * Defaults to false, which falls back to the bucket's configured value.
   */
  bool max_wait_time_override = 5;
}

message AllowResponse {
  enum Status {
    OK = 0;                                 // Tokens granted
    REJECTED_TIMEOUT = 1;                   // Tokens not  available within max wait time
    REJECTED_NO_BUCKET = 2;                 // No valid bucket
    REJECTED_TOO_MANY_BUCKETS = 3;          // Dynamic bucket couldn't be created
    REJECTED_TOO_MANY_TOKENS_REQUESTED = 4;
    REJECTED_INVALID_REQUEST = 5;
    REJECTED_SERVER_ERROR = 6;
  }

  Status status = 1;

  /**
   * Number of tokens granted, if status == OK
   */
  int64 tokens_granted = 2;
  /**
   * Wait for this many millis before proceeding, if status == OK. 0 if no waiting is required.
   */
  int64 wait_millis = 3;
}
